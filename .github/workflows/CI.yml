name: CI

on:
  push:
    branches:
      - master
      - testing
    paths:
      - 'tests/**'
      - 'nflows/**'
      - '.github/workflows/**'
      - 'setup.py'
      - 'environment.yml'
  pull_request:
    branches:
      - master
    paths:
      - 'tests/**'
      - 'nflows/**'
      - '.github/workflows/**'
      - 'setup.py'
      - 'environment.yml'

jobs:
  test:
    name: Py${{ matrix.python-version }}/${{ matrix.os }}/Torch${{ matrix.pytorch-version }}/${{ github.event_name }} 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version:
          - '3.7'
        os:
          - ubuntu-latest
        pytorch-version:
          - '1.8'
          - '1.7'
          - '1.6'
    
    steps:
      - uses: actions/checkout@v1.0.0
      - name: "Set up Python"
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: "Install pip"
        run: |
            python -m pip install --upgrade pip wheel
            pip install wheel
      - if: matrix.pytorch-version == '1.8'
        name: "Install pytorch 1.8"
        run: pip install torch==1.8.0+cpu torchvision==0.9.0+cpu torchaudio==0.8.0 -f https://download.pytorch.org/whl/torch_stable.html
      - if: matrix.pytorch-version == '1.7'
        name: "Install pytorch 1.7"
        run: pip install torch==1.7.1+cpu torchvision==0.8.2+cpu torchaudio==0.7.2 -f https://download.pytorch.org/whl/torch_stable.html
      - if: matrix.pytorch-version == '1.6'
        name: "Install pytorch 1.6"
        run: pip install torch==1.6.0+cpu torchvision==0.7.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
      - name: "Install package"
        run: python setup.py install
      - name: "Install testing dependencies"
        run: pip install torchtestcase
      - name: "Run tests"
        run: python -m unittest discover -s . -p "*_test.py"
